class Solution {
    public int trap(int[] height) {                         //双指针
        if(height.length<3)
            return 0;
        int result=0;
        int left=0;
        int right=height.length-1;
        
        for(;left<right;){
            
            if(height[left]<height[right]){
                int i=left+1;
                
                while(i<right){
                    
                    
                    if(height[i]>=height[left]){
                        left=i;
                        break;
                    }
                    else result+=height[left]-height[i++];
                }
                if(i==right)
                    return result;
            }
            else {
                
                int j=right-1;
                
                while(j>left){
                    
                    
                    if(height[j]>=height[right]){
                        right=j;
                        break;
                    }
                    else result+=height[right]-height[j--];
                }
                if(j==left)
                    return result;
            }
            
        }
       
      return result;  
    }
}
/*       之前写的答案错误
 public int trap(int[] height) {
        if(height.length<3)
            return 0;
        int result=0;
        int left=0;
        int temp=0;
        while(height[left]<height[left+1]){
            
                left++;
            if(left==height.length-2)
                return 0;
        }
        
        for(int i=left+1;i<height.length;i++){
            
            
           if(((i<height.length-1)&&(height[i]>=height[i+1])||(i==height.length-1))&&(height[i]>height[i-1])){
              
               
                for(int j=left+1;j<i;j++){
                    result+=height[j]<Math.min(height[left],height[i])?Math.min(height[left],height[i])-height[j]:0;
                }
                
                left=i;
            }
            
        }
      return result;  
    }
    */
/*
 int temp=0;
        while(height[left]<height[left+1]){
            
                left++;
            if(left==height.length-2)
                return 0;
        }
        
        for(int i=left+1;i<height.length;i++){
            
            
           if(((i<height.length-1)&&(height[i]>=height[i+1])||(i==height.length-1))&&(height[i]>height[i-1])){
              
               
                for(int j=left+1;j<i;j++){
                    result+=height[j]<Math.min(height[left],height[i])?Math.min(height[left],height[i])-height[j]:0;
                }
                
                left=i;
            }
            
        }
 if((height[i]>height[i-1])&&(height[i]>=height[i+1]))
*/