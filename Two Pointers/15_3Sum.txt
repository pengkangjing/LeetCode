public class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
       List<List<Integer>> result = new  ArrayList<List<Integer>>();             //看答案 背的
        Arrays.sort(nums);
        for(int i=0;i<nums.length-2;i++){
            if((i>0)&&(nums[i]==nums[i-1]))
                continue;
            int target = 0-nums[i];
            int left = i+1;
            int right = nums.length-1;
            while(left<right){
                if(nums[left]+nums[right]==target){
                   
                    result.add(Arrays.asList(nums[i],nums[left],nums[right]));
                    while(left<right&&nums[left]==nums[left+1]) left++;           //注意这里加上 left<right
                    while(left<right&&nums[right]==nums[right-1]) right--;
                    left++;
                    right--;
                }
                else if(nums[left]+nums[right]>target){
                    right--;
                }
                else left++;
            }
        }
        return result;
    } 
}
/*
 public List<List<Integer>> threeSum(int[] nums) {
        int i,j,k,n;
        n=nums.length;
        List<List<Integer>> list=new LinkedList<List<Integer>>(); 
        
        if(n<3) return list;
        for (i=0;i<n-2;i++){
        	
        	
          for(j=i+1;j<n-1;j++){
        	  
              for(k=j+1;k<n;k++)
                {
            	  
                    if (nums[i]+nums[j]+nums[k]==0) {
                        
                        List<Integer> a1 = new LinkedList<Integer>();
                        a1.add(nums[i]);
                        a1.add(nums[j]);
                        a1.add(nums[k]);
                        Collections.sort(a1);
                        int l=0;
                        for(;l<list.size();l++){
                            if((list.get(l).get(0)==a1.get(0))&&(list.get(l).get(1)==a1.get(1))&&(list.get(l).get(2)==a1.get(2)))
                                                                break;
                        }
                        if(!(l==list.size()))
                            continue;
                        list.add(a1);
                        
                    }
                        
                        
                }
              
          }
                
            
    }  
       return list;
    } 
*/
    
/*
int i,j,k,n;
        n=nums.length;
        List<List<Integer>> list=new LinkedList<List<Integer>>(); 
        if(n<3) return list;
        for (i=0;i<n;i++){
        	
        	
          for(j=i+1;i<j&&j<n;j++){
        	  
              for(k=j+1;j<k&&k<n;k++)
                {
            	  
                    if (nums[i]+nums[j]+nums[k]==0) {
                        List<Integer> a1 = new LinkedList<Integer>();
                        a1.add(nums[i]);
                        a1.add(nums[j]);
                        a1.add(nums[k]);
                       
                        list.add(a1);
                        
                    }
                        
                        
                }
              
          }
                
            
    }  
       return list;
    }
*/