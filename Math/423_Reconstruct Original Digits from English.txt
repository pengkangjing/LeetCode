class Solution {
    public String originalDigits(String s) {
        StringBuffer sb = new StringBuffer();
        int[] temp=new int[10];
        for(int i=0;i<s.length();i++){
            
            switch(s.charAt(i)){
                    
                    case'z' :  temp[0]++;break;
                    case'o' :  temp[1]++;break;
                    case'w' :  temp[2]++;break;
                    case'r' :  temp[3]++;break;
                    case'u' :  temp[4]++;break;
                    case'v' :  temp[5]++;break;
                    case'x' :  temp[6]++;break;
                    case's' :  temp[7]++;break;    
                    case'g' :  temp[8]++;break;
                    case'i' :  temp[9]++;break;
                    default:break;
    
            }
        }
        
        temp[1]=temp[1]-temp[0]-temp[2]-temp[4];
        temp[3]=temp[3]-temp[0]-temp[4];
        temp[7]=temp[7]-temp[6];
        temp[5]=temp[5]-temp[7];
        temp[9]=temp[9]-temp[6]-temp[8]-temp[5];
        for(int j=0;j<10;j++){
            
            for(int k=0;k<temp[j];k++){
                sb.append(j);
            }
            
        }
        return sb.toString();
    }
}