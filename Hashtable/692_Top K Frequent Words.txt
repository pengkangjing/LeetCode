class Solution {
    public List<String> topKFrequent(String[] words, int k) {   //提高题还不会做  Try to solve it in O(n log k) time and O(n) extra space.
        
        List<String> result =  new ArrayList();
        
        Map<String,Integer> m = new HashMap<String,Integer>();
        
        
        for(int i=0;i<words.length;i++){
            if(m.containsKey(words[i]))
                m.put(words[i],m.get(words[i])+1);
            else m.put(words[i],1);
                
        }
        
        while(k>0){
            k--;
            int temp=0;
            String str="";
            for(String s:m.keySet()){
                
                
                if(m.get(s)>=temp){
                    if((m.get(s)==temp)&&(s.compareTo(str)>0))
                        continue;
                    temp=m.get(s);
                    str=s;
                }
            }
          result.add(str);
          m.remove(str);
        }
        return result;
    }
}