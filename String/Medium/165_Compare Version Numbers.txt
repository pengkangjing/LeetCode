class Solution {
    public int compareVersion(String version1, String version2) {
        
        int ver1_left=0;
        String ver1_right="";
        int ver2_left=0;
        String ver2_right="";
        int i=0;
        int j=0;
        
        if((version1.length()==0)&&(version2.length()==0))
            return 0;
        else if(version1.length()==0)
            return compareVersion("0", version2);               //处理 “1.0” “1” 这种情况 下同
        else if(version2.length()==0)
            return  compareVersion(version1, "0");
        
        
        while(true){
            
            if((i==version1.length())||(version1.charAt(i)=='.'))
                 break;
               
           i++;
            
        }
        if(i<version1.length()-1){
            ver1_left=Integer.valueOf(version1.substring(0,i));
            ver1_right=version1.substring(i+1,version1.length());
        }
        else ver1_left=Integer.valueOf(version1.substring(0,i));
        
        
         while(true){
            
            if((j==version2.length())||(version2.charAt(j)=='.'))
                 break;
               
           j++;
            
        }
        if(j<version2.length()-1){
            ver2_left=Integer.valueOf(version2.substring(0,j));
            ver2_right=version2.substring(j+1,version2.length());
        }
        else ver2_left=Integer.valueOf(version2.substring(0,j));
       
        if(ver1_left<ver2_left)
            return -1;
        else if(ver1_left>ver2_left)
            return 1;
        else {
            return compareVersion(ver1_right, ver2_right);                  //运用递归法
        }
        
    }
}