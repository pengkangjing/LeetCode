int i;
	String S;
	 public int calculate(String s) {
	        s=s.replaceAll(" ", "");
	        S=s;
	        LinkedList<Integer> num = new LinkedList<Integer>();  
	        
	        
	       // Queue<Integer> num = new LinkedList<Integer>();
	        Queue<Character> operator = new LinkedList<Character>();
	        //Stack<Integer> num=new Stack<Integer>();
	        //Stack<Character> operator=new Stack<Character>();
	        int a,b;
	       // int i;
	        for(i=0;i<s.length();i++){
	        	System.out.println(i+"nono");
	        	if(s.charAt(i)=='*')
	        	{
	        		i++;
	        		num.addLast((num.removeLast()*getnum()));
	        		//System.out.println("hhaha"+num);
	        		System.out.println(i+"HAHA");
	        	}
	        		
	            else if(s.charAt(i)=='/')
	            {
	            	i++;
	            	num.addLast((num.removeLast()/getnum()));
	        	    
	            }
	        		
	        	else if(s.charAt(i)=='+'|s.charAt(i)=='-')
	        		operator.offer(s.charAt(i));
	        	else  
	        	{   
	        	      num.addLast(getnum());
        		     
	        	}
	        	
	        	System.out.println(num);
	        }
	        
	        while(!operator.isEmpty()){
	        	a=num.removeFirst();
	        	b=num.removeFirst();
	        	if(operator.poll()=='-')
	        		num.addFirst(a-b);
	        	else num.addFirst(a+b);
	        }
	        return num.removeFirst();
	        
	    }
private int getnum() {
		// TODO Auto-generated method stub
	int d=0;
	while(i<S.length()&&Character.getNumericValue(S.charAt(i))>=0&&Character.getNumericValue(S.charAt(i))<=9)
	{
		d=d*10+Character.getNumericValue(S.charAt(i));
	    i++;
	    System.out.println(d+"d");
	}
	    i--;
	    System.out.println(i+"yes");
		return d;
	}
