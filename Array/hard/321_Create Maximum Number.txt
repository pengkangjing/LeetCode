class Solution {
    public int[] maxNumber(int[] nums1, int[] nums2, int k) {
        
        int[] result = new int[k];
        int get_from_nums1 = Math.min(k,nums1.length);
        for(int i=Math.max(k-nums2.length,0);i<=get_from_nums1;i++){                    //看完答案后自己敲了一遍 自己实在想不出来
            
            int[] res1 = new int[i];
            int[] res2 = new int[k-i];
            res1 = solve(nums1,i);
            res2 = solve(nums2,k-i);
            
            int[] temp = new int[k];
            
            int pos1 = 0;
            int pos2 = 0;
            int t_pos = 0;
            while(res1.length>0&&res2.length>0&&pos1<res1.length&&pos2<res2.length){    //组装从两个数组中取出的数字
                if(compare(res1,pos1,res2,pos2))
                    temp[t_pos++] = res1[pos1++];
                else temp[t_pos++] = res2[pos2++];
            }
            while(pos1<res1.length)
                temp[t_pos++] = res1[pos1++];
            while(pos2<res2.length)
                temp[t_pos++] = res2[pos2++];
            
            
            if(!compare(result,0,temp,0))                                              //是否需要更新最大的数
                result = temp;
            
        }
        
        return result;
    }
    private boolean compare(int[] nums1,int pos1,int[] nums2,int pos2){
        
        for(;pos1<nums1.length&&pos2<nums2.length;){
            if(nums1[pos1]>nums2[pos2])  return true;
            if(nums1[pos1]<nums2[pos2])  return false;
            pos1++;
            pos2++;
        }
        return pos1!=nums1.length;
    }
    private int[] solve(int[] nums,int k){
        
        int[] result = new int[k];
        int len = 0;
        for(int i=0;i<nums.length;i++){
            
            while((len>0)&&(len+nums.length-i>k)&&(result[len-1]<nums[i])){
                len--;
            }
            if(len<k){                               //加这个判断是防止上面条件不满足，下面这行数组越界；
              result[len++] = nums[i];  
            }
            
            
        }
        
        return result;
    }
}