class Solution {
    public int numIslands(char[][] grid) {
        int count=0;
        int height = grid.length;
        if(height==0)
            return 0;
        int width  = grid[0].length;
        
        int[][]  temp =new  int[height][width];
       for(int i=0;i<height;i++){
           for(int j=0;j<width;j++){
               
               if(grid[i][j]=='1'){
                   
                   if(temp[i][j]==0){
                       count++;
                       find(grid,temp,i,j);
                   }
               }
           }
       }
        return count;
    }
    private void find(char[][] grid,int[][] temp ,int i,int j){
        
        temp[i][j]=1;
        if(i-1>=0){
            if(grid[i-1][j]=='1'){
                if(temp[i-1][j]==0){
                    temp[i-1][j]=1;
                    find(grid,temp,i-1,j);
                }
                
                
            }
            
        }
        if(i+1<grid.length){
             if(grid[i+1][j]=='1'){
                if(temp[i+1][j]==0){
                    temp[i+1][j]=1;
                    find(grid,temp,i+1,j);
                }
                
                
            }
          
        }
        if(j-1>=0){
             if(grid[i][j-1]=='1'){
                if(temp[i][j-1]==0){
                    temp[i][j-1]=1;
                    find(grid,temp,i,j-1);
                }
                
                
            }
            
        }
        if(j+1<grid[0].length){
             if(grid[i][j+1]=='1'){
                if(temp[i][j+1]==0){
                    temp[i][j+1]=1;
                    find(grid,temp,i,j+1);
                }
                
                
            }
        }
    }
}