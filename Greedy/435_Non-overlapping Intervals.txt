/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    public int eraseOverlapIntervals(Interval[] intervals) {     //这题没用贪婪算法 自己还不会用 虽然这个题目的主题是贪婪算法
        if(intervals.length<2)
            return 0;
        Arrays.sort(intervals,new Comparator<Interval>(){      //核心在排序  以每个间隔的end作为基准
            public int compare(Interval s1,Interval s2){
                if(s1.end<s2.end)
                    return -1;
                else if(s1.end>s2.end)
                    return 1;
                else if((s1.end==s2.end)&&(s1.start<s2.start))
                    return -1;
                else if((s1.end==s2.end)&&(s1.start>s2.start))
                    return 1;
                else return 0;
            }
        });
       
        int st=intervals[0].start;
        int en=intervals[0].end;
        int result=0;
         for(int i=1;i<intervals.length;i++){
            if(intervals[i].start>=en)
                en=intervals[i].end;
             else result++;
        }
       
        
        
    return result;
    }
    
}