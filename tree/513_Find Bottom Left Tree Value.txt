/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int findBottomLeftValue(TreeNode root) {
       
        return findleft(root)[0];
    }
    private int[] findleft(TreeNode root){
        int[] result = new int[2];
        result[0]=root.val;
        int[] temp;                                   //数组记录最深的节点 和深度  
        if(root.left!=null){
             temp=findleft(root.left);
             temp[1]+=1;
             if(temp[1]>result[1]){
             result[0]=temp[0];
             result[1]=temp[1];
            }
        }
           
        if(root.right!=null){
            temp=findleft(root.right);
            temp[1]+=1;
            if(temp[1]>result[1]){
            result[0]=temp[0];
            result[1]=temp[1];
            }
        }
            
        
        return result;
    }
}