/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        
        if(nums.length==0)
            return null;
        int index=0;
        int max=nums[0];
        for(int i=0;i<nums.length;i++){
            if(nums[i]>max){
               max=nums[i];
                index=i;
            }
        }
       int[] nums_left=new int[index];
       int[] nums_right=new int[nums.length-index-1];
        for(int j=0;j<index;j++){
            nums_left[j]=nums[j];
        }
        for(int k=index+1;k<nums.length;k++){
            nums_right[k-index-1]=nums[k];
        }
       TreeNode result = new TreeNode(max);
        result.left=constructMaximumBinaryTree(nums_left);
        result.right=constructMaximumBinaryTree(nums_right);
        return result;
    }
}