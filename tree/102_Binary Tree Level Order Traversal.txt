/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();                       //这个答案虽然通过了 但是空间复杂度很高
        List<Integer> temp = new ArrayList<Integer>();
        if(root==null)
            return result;
        if(root!=null){
            temp.add(root.val);
        }
        result.add(temp);
        
        if((root.left==null)&&(root.right==null))
            return result;
        List<List<Integer>> left = new ArrayList<List<Integer>>();
        List<List<Integer>> right = new ArrayList<List<Integer>>();
        if(root.left!=null){
            left=levelOrder(root.left);
        }
        if(root.right!=null){
           right= levelOrder(root.right);
        }
        for(int i=0;i<Math.max(left.size(),right.size());i++){
            List<Integer> union = new ArrayList<Integer>();
            if(i<left.size())
                union.addAll(left.get(i));
            if(i<right.size())
                union.addAll(right.get(i));
            result.add(union); 
        }
        
        return result;
            
    }
    
}