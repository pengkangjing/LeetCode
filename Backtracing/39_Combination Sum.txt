class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
           List<List<Integer>> result =  new ArrayList<List<Integer>>();
           Arrays.sort(candidates);
           for(int i=0;i<candidates.length;i++){
               
              List<Integer> item = new ArrayList<Integer>();
             
              process(result,item,target,candidates,i,0);
               
           }
        return result;
    }
    private void process(List<List<Integer>> result,List<Integer> item,int target,int[] candidates,int i,int sum){
        item.add(candidates[i]);
        sum+=candidates[i];
        if(sum==target){
            result.add(new ArrayList<Integer>(){{addAll(item);}} );
        }
        else if(sum<target){
            for(int j=i;(j<candidates.length)&&(candidates[j]<=target-sum);j++){   //注意中间的条件 防止越界
               
                process(result,item,target,candidates,j,sum);
                
            }
        }
        item.remove(item.size()-1);
        sum-=candidates[i];
        
    }
}
