/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(m==n)
            return head;
        ListNode temp1=head;
        ListNode pre=new  ListNode(0);
        pre.next=head;
        int p=m;
        while(p>1){
            pre=temp1;
            temp1=temp1.next;
            p--;
        }
        
        
        ListNode temp=temp1;
        ListNode temp2=temp1.next;
        int count=n-m;
        while(count>0){
    
            temp=temp2;
            temp2=temp2.next;
            
            temp.next=temp1;
            temp1=temp;
            count--;
        }
     
        pre.next.next=temp2;
        pre.next=temp;
        
       if(m==1)
           return temp;
        else return head;
        
    }
}