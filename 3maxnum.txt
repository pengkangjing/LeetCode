 Stack<Integer> st= new Stack<Integer>();
        for(int i;i<nums.length;i++){
            push_num(nums[i],st);
        }
        if(st.size<3;)
            return st.top();
        else {
            st.pop();
            st.pop();
            return st.top;
        }
        
        private void push_num(int i,Stack<Integer> st){
            Stack<Integer> temp= new Stack<Integer>();
            if(st.isEmpty())
                st.push(i);
            
            if(i<st.top())
            
            
        }
        int first=nums[0];
        int second=0;
        int third=0;
        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]>=first){
                second=first;
                first=nums[i];
            }
            else if(nums[i]<first){
                second=nums[i];
            }
            
            if(nums[i]>first)
            {   third=second;
                second=first;
                first=nums[i];
            }
            else if(nums[i]>second){
                 third=second;
                second=nums[i];
                
            }
            else if(nums[i]>third){
                third=nums[i];
            }
        }
        if(third!=second)
            return third;
        else return first;
        